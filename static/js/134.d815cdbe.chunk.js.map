{"version":3,"file":"static/js/134.d815cdbe.chunk.js","mappings":"oKAcA,IAXmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACfC,GAAWC,EAAAA,EAAAA,MACXC,EAA6B,MAAtBF,EAASG,SAAmB,WAAa,GACtD,OAAQ,wBACNJ,EAAOK,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,MAAZ,OAAwB,yBACnC,SAAC,KAAD,CAAMF,GAAIA,EAAIG,GAAE,UAAKN,GAAL,OAAYG,GAAMI,MAAO,CAAEC,KAAMV,GAAjD,SAA8DM,GAAQC,KAD1BF,EAAjC,KAKb,C,iHC6BD,UAnCe,WAAO,IAAD,EACpB,GAA4BM,EAAAA,EAAAA,UAAS,IAArC,eAAOZ,EAAP,KAAea,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMT,EAAI,UAAGQ,EAAaE,IAAI,eAApB,QAA+B,GAoBzC,OAbAC,EAAAA,EAAAA,YAAU,WACC,KAAPX,IAGH,iBAAC,8GAE8BY,EAAAA,EAAAA,IAAaZ,GAF3C,OAEOa,EAFP,OAGCP,EAAUO,EAAeC,SAH1B,gDAKCC,QAAQC,IAAI,KAAMC,SALnB,wDAAD,EAQA,GAAE,CAACjB,KAEH,6BACC,kBAAMkB,SApBc,SAACC,GACtBA,EAAMC,iBACNX,EAAgB,CAAET,KAAMmB,EAAME,OAAO,GAAGC,OACxC,EAiBC,WACE,kBAAOC,KAAK,OAAOC,aAAcxB,KACjC,mBAAQuB,KAAK,SAAb,wBAEF,SAAC,IAAD,CAAY9B,OAAQA,MAItB,C,+LCpCKgC,EAAU,gCAEHC,EAAY,mCAAG,0FACT,kCADS,SAELC,EAAAA,EAAAA,IAAUF,EADd,kCACiC,CAClDG,QAAS,CACRC,OAAQ,mBACRC,cAAe,gOALU,cAErBC,EAFqB,yBAOpBA,GAPoB,2CAAH,qDAUZnB,EAAY,mCAAG,WAAOZ,GAAP,gFACrBgC,EADqB,6BACahC,EADb,uDAEL2B,EAAAA,EAAAA,IAAUF,EAAQO,EAAW,CAClDJ,QAAS,CACRC,OAAQ,mBACRC,cAAe,gOALU,cAErBC,EAFqB,yBAOpBA,EAAQE,MAPY,2CAAH,sDAUZC,EAAe,mCAAG,WAAOnC,GAAP,gFACxBoC,EADwB,gBACJpC,EADI,4BAER4B,EAAAA,EAAAA,IAAUF,EAAQU,EAAU,CACjDP,QAAS,CACRC,OAAQ,mBACRC,cAAe,gOALa,cAExBC,EAFwB,yBAOvBA,EAAQE,MAPe,2CAAH,sDAWfG,EAAO,mCAAG,WAAOrC,GAAP,gFAChBsC,EADgB,gBACGtC,EADH,oCAEA4B,EAAAA,EAAAA,IAAUF,EAAQY,EAAS,CAChDT,QAAS,CACRC,OAAQ,mBACRC,cAAe,gOALK,cAEhBC,EAFgB,yBAOfA,EAAQE,MAPO,2CAAH,sDAUPK,EAAU,mCAAG,WAAOvC,GAAP,gFACnBwC,EADmB,gBACGxC,EADH,2CAEH4B,EAAAA,EAAAA,IAAUF,EAAQc,EAAY,CACnDX,QAAS,CACRC,OAAQ,mBACRC,cAAe,gOALQ,cAEnBC,EAFmB,yBAOlBA,EAAQE,MAPU,2CAAH,qD","sources":["components/MoviesList/MoviesList.jsx","pages/Movies.jsx","servis/API.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Link, useLocation } from \"react-router-dom\";\n\nconst MoviesList = ({ movies }) => {\n\tconst location = useLocation();\n\tconst path = location.pathname === '/' ? '/movies/' : '';\n\treturn (<ul>\n\t\t{movies.map(({id, name, title}) => (<li key={id}>\n\t\t\t<Link id={id} to={`${path}${id}`} state={{ from: location }}>{name || title}</Link>\n\t\t</li>))}\n\t</ul>\n\t)\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes ={\n\tmovies: PropTypes.array.isRequired,\n}","import { useEffect, useState  } from 'react';\nimport { useSearchParams } from \"react-router-dom\";\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { searchMovies } from 'servis/API';\n\n\nconst Movies = () => {\n\tconst [movies, setMovies] = useState([]);\n\tconst [searchParams, setSearchParams] = useSearchParams();\n\tconst name = searchParams.get(\"name\") ?? \"\";\n\n\tconst getSubmitMovies=(event)=>{\n\t\tevent.preventDefault();\n\t\tsetSearchParams({ name: event.target[0].value });\n\t};\n\n\tuseEffect(() => {\n\t\tif(name===\"\"){\n\t\t\treturn;\n\t\t}\n\t\t(async ()=> {\n\t\t\ttry {\n\t\t\t\tconst searchedMovies = await searchMovies(name);\n\t\t\t\tsetMovies(searchedMovies.results);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error.message);\n\t\t\t}\n\t\t})()\n\t}, [name]);\n\treturn (\n\t\t<main>\n\t\t\t<form onSubmit={getSubmitMovies}>\n\t\t\t\t\t<input type=\"text\" defaultValue={name}/>\n\t\t\t\t\t<button type='submit'>Search</button>\n\t\t\t</form>\n\t\t\t<MoviesList movies={movies}/>\n\t\t</main>\n\t\t\n\t)\n}\n\nexport default Movies;","import axios from \"axios\";\n\n// const API_KEY = \"920cb20e777a7a7d295f72378e3fc1f7\";\nconst baseUrl = 'https://api.themoviedb.org/3/';\n\nexport const getTopMovies = async () => {\n\tconst topMovies = 'trending/all/day?language=en-US';\n\tconst respons = await axios.get(baseUrl+topMovies, {\n\t\theaders: {\n\t\t\tAccept: \"application/json\",\n\t\t\tAuthorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5MjBjYjIwZTc3N2E3YTdkMjk1ZjcyMzc4ZTNmYzFmNyIsInN1YiI6IjY0OTU0OTVlZDIzNmU2MDExZTA5ZTUyNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.R2L5Wy4UdWUAvySxIZAdz2Q2Nl5VLWs3qlmhZ66-AXo'\n\t\t}});\n\treturn respons;\n}\n\nexport const searchMovies = async (name) => {\n\tconst searchUrl = `search/movie?query=${name}&include_adult=false&language=en-US&page=1`\n\tconst respons = await axios.get(baseUrl+searchUrl, {\n\t\theaders: {\n\t\t\tAccept: \"application/json\",\n\t\t\tAuthorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5MjBjYjIwZTc3N2E3YTdkMjk1ZjcyMzc4ZTNmYzFmNyIsInN1YiI6IjY0OTU0OTVlZDIzNmU2MDExZTA5ZTUyNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.R2L5Wy4UdWUAvySxIZAdz2Q2Nl5VLWs3qlmhZ66-AXo'\n\t\t}});\n\treturn respons.data;\n}\n\nexport const getMovieDetails = async (id) => {\n\tconst movieUrl = `movie/${id}?language=en-US`\n\tconst respons = await axios.get(baseUrl+movieUrl, {\n\t\theaders: {\n\t\t\tAccept: \"application/json\",\n\t\t\tAuthorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5MjBjYjIwZTc3N2E3YTdkMjk1ZjcyMzc4ZTNmYzFmNyIsInN1YiI6IjY0OTU0OTVlZDIzNmU2MDExZTA5ZTUyNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.R2L5Wy4UdWUAvySxIZAdz2Q2Nl5VLWs3qlmhZ66-AXo'\n\t\t}});\n\treturn respons.data;\n}\n\n\nexport const getCast = async (id) => {\n\tconst castUrl = `movie/${id}/credits?language=en-US`\n\tconst respons = await axios.get(baseUrl+castUrl, {\n\t\theaders: {\n\t\t\tAccept: \"application/json\",\n\t\t\tAuthorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5MjBjYjIwZTc3N2E3YTdkMjk1ZjcyMzc4ZTNmYzFmNyIsInN1YiI6IjY0OTU0OTVlZDIzNmU2MDExZTA5ZTUyNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.R2L5Wy4UdWUAvySxIZAdz2Q2Nl5VLWs3qlmhZ66-AXo'\n\t\t}});\n\treturn respons.data;\n}\n\nexport const getReviews = async (id) => {\n\tconst reviewsUrl = `movie/${id}/reviews?language=en-US&page=1`\n\tconst respons = await axios.get(baseUrl+reviewsUrl, {\n\t\theaders: {\n\t\t\tAccept: \"application/json\",\n\t\t\tAuthorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5MjBjYjIwZTc3N2E3YTdkMjk1ZjcyMzc4ZTNmYzFmNyIsInN1YiI6IjY0OTU0OTVlZDIzNmU2MDExZTA5ZTUyNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.R2L5Wy4UdWUAvySxIZAdz2Q2Nl5VLWs3qlmhZ66-AXo'\n\t\t}});\n\treturn respons.data;\n}"],"names":["movies","location","useLocation","path","pathname","map","id","name","title","to","state","from","useState","setMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","searchMovies","searchedMovies","results","console","log","message","onSubmit","event","preventDefault","target","value","type","defaultValue","baseUrl","getTopMovies","axios","headers","Accept","Authorization","respons","searchUrl","data","getMovieDetails","movieUrl","getCast","castUrl","getReviews","reviewsUrl"],"sourceRoot":""}